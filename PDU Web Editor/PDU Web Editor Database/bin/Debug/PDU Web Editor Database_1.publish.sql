/*
Deployment script for PDU Web Editor Database

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "PDU Web Editor Database"
:setvar DefaultFilePrefix "PDU Web Editor Database"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL10_50.DEV\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL10_50.DEV\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[tbl_Assets]...';


GO
CREATE TABLE [dbo].[tbl_Assets] (
    [Ast_AssetUniqueId] UNIQUEIDENTIFIER NOT NULL,
    [Ast_AssetFileName] NVARCHAR (255)   NOT NULL,
    [Ast_UpdatedByWho]  NVARCHAR (50)    NOT NULL,
    [Ast_UpdatedOnDate] DATE             NOT NULL,
    [Ast_FileLocation]  NVARCHAR (255)   NOT NULL,
    CONSTRAINT [pk_AssetId] PRIMARY KEY CLUSTERED ([Ast_AssetUniqueId] ASC)
);


GO
PRINT N'Creating [dbo].[tbl_PDURecords]...';


GO
CREATE TABLE [dbo].[tbl_PDURecords] (
    [Pdr_PDURecordId]        UNIQUEIDENTIFIER NOT NULL,
    [Pdr_PDURecordName]      NVARCHAR (255)   NOT NULL,
    [Pdr_PDURecordStartDate] DATE             NOT NULL,
    [Pdr_PDURecordEndDate]   DATE             NOT NULL,
    [Pdr_PDURecordWeight]    INT              NOT NULL,
    [Pdr_AssetUniqueId]      UNIQUEIDENTIFIER NULL,
    CONSTRAINT [pk_PDURecordId] PRIMARY KEY CLUSTERED ([Pdr_PDURecordId] ASC)
);


GO
PRINT N'Creating [dbo].[tbl_PDUs]...';


GO
CREATE TABLE [dbo].[tbl_PDUs] (
    [Pdu_PDUUniqueId]     UNIQUEIDENTIFIER NOT NULL,
    [Pdu_PDUFileName]     NVARCHAR (255)   NOT NULL,
    [Pdu_PDUUpdateByWho]  NVARCHAR (255)   NOT NULL,
    [Pdu_PDUUpdateOnDate] DATE             NOT NULL,
    [Pdu_PDUType]         NVARCHAR (25)    NOT NULL,
    [Pdr_PDURecordId]     UNIQUEIDENTIFIER NOT NULL,
    CONSTRAINT [pk_Pdu_PDUUniqueId] PRIMARY KEY CLUSTERED ([Pdu_PDUUniqueId] ASC)
);


GO
PRINT N'Creating fk_AssetUinqueId...';


GO
ALTER TABLE [dbo].[tbl_PDURecords]
    ADD CONSTRAINT [fk_AssetUinqueId] FOREIGN KEY ([Pdr_AssetUniqueId]) REFERENCES [dbo].[tbl_Assets] ([Ast_AssetUniqueId]) ON DELETE SET NULL ON UPDATE CASCADE;


GO
PRINT N'Creating fk_Pdr_PDURecordId...';


GO
ALTER TABLE [dbo].[tbl_PDUs]
    ADD CONSTRAINT [fk_Pdr_PDURecordId] FOREIGN KEY ([Pdr_PDURecordId]) REFERENCES [dbo].[tbl_PDURecords] ([Pdr_PDURecordId]) ON DELETE SET NULL ON UPDATE CASCADE;


GO
PRINT N'Creating ck_PDURecordWeight...';


GO
ALTER TABLE [dbo].[tbl_PDURecords]
    ADD CONSTRAINT [ck_PDURecordWeight] CHECK (Pdr_PDURecordWeight BETWEEN 1 AND 5);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '92f4f2a5-a197-487e-a302-70a076bf9431')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('92f4f2a5-a197-487e-a302-70a076bf9431')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f001a014-be79-4bbf-91c3-4feeb1120fc6')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f001a014-be79-4bbf-91c3-4feeb1120fc6')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '9d6eba22-f10e-4b5b-8859-88e1adec6024')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('9d6eba22-f10e-4b5b-8859-88e1adec6024')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '99f98ee4-e729-43ca-be11-3ebf64b75640')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('99f98ee4-e729-43ca-be11-3ebf64b75640')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c859ef6e-2c24-4502-a60f-f8bf10f90a13')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c859ef6e-2c24-4502-a60f-f8bf10f90a13')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'b16dcd0b-28d7-4dd6-ba4d-d0f6fba84aa7')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('b16dcd0b-28d7-4dd6-ba4d-d0f6fba84aa7')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'abf76b01-c8e8-4514-b504-582172b4f2a8')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('abf76b01-c8e8-4514-b504-582172b4f2a8')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '70687978-872c-4c7b-b526-e3db8b2d9783')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('70687978-872c-4c7b-b526-e3db8b2d9783')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '51f6a990-d84d-435a-98b5-d9a4d2bb21fe')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('51f6a990-d84d-435a-98b5-d9a4d2bb21fe')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c32cf349-a116-42e9-bec3-2c2e39dcf6be')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c32cf349-a116-42e9-bec3-2c2e39dcf6be')

GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
